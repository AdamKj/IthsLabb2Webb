@page "/api/edit-user/{id:int}"
@inject HttpClient _http

<h2>Edit User: @_user.FirstName @_user.LastName</h2>

<EditForm Model="@_user" OnValidSubmit="OnValidUserSubmit">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="First Name" Required="true"
                                  @bind-Value="_user.FirstName" For="@(() => _user.FirstName)"/>
                    <MudTextField Label="Last Name" Class="mt-3" Required="true"
                                  @bind-Value="_user.LastName" For="@(() => _user.LastName)"/>
                    <MudTextField Label="Email" Class="mt-3" InputType="InputType.Email" Required="true"
                                  @bind-Value="_user.Email" For="@(() => _user.Email)" />
                    <MudTextField Label="Phone" Class="mt-3" InputType="InputType.Telephone" Required="true"
                                  @bind-Value="_user.Phone" For="@(() => _user.Phone)" />
                    <MudTextField Label="Street Address" Class="mt-3"  Required="true"
                                  @bind-Value="_user.Address.Street" For="@(() => _user.Address.Street)" />
                    <MudTextField Label="Zip Code" Class="mt-3" Required="true"
                                  @bind-Value="_user.Address.Zip" For="@(() => _user.Address.Zip)" />
                    <MudTextField Label="City" Class="mt-3"  Required="true"
                                  @bind-Value="_user.Address.City" For="@(() => _user.Address.City)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton Disabled="@(!context.Validate())" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                @if (_success)
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
                else
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the success message.
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>
@code {
    [Parameter]
    public int Id { get; set; }

    User _user = new();
    bool _success;

    protected override async Task OnParametersSetAsync()
    {
        _user = await _http.GetFromJsonAsync<User>($"api/User/{Id}");
    }

    private async Task OnValidUserSubmit()
    {
        await _http.PutAsJsonAsync("api/User", _user);
        _success = true;
        StateHasChanged();
    }
}
